name: dotnet-build

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip
  DOCKER_BUILDKIT: 1
  DOTNET_BUILD_CONFIG: Debug

jobs:
  build-dotnet:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0.x
            5.0.x
            3.1.x
      - name: Build
        run: dotnet build ./src/SkiaSharp.QrCode/SkiaSharp.QrCode.csproj -c ${{ env.DOTNET_BUILD_CONFIG }}
      - name: Test
        run: dotnet test ./tests/SkiaSharp.QrCode.Tests/ -c ${{ env.DOTNET_BUILD_CONFIG }} -p:CollectCoverage=true -p:CoverletOutputFormat=opencover --logger GitHubActions --logger console;verbosity=normal
      - uses: codecov/codecov-action@v1
        with:
          file: ./tests/SkiaSharp.QrCode.Tests/coverage.opencover.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true
        continue-on-error: true

  samples-linux:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0.x
            5.0.x
            3.1.x
      - name: Install wasm-tools
        run: dotnet workload install wasm-tools
      # build
      - name: Build (ManualGenerate)
        run: dotnet build ./samples/ManualGenerate/ManualGenerate.csproj -c ${{ env.DOTNET_BUILD_CONFIG }}
      - name: Build (SimpleGenerate)
        run: dotnet build ./samples/SimpleGenerate/SimpleGenerate.csproj -c ${{ env.DOTNET_BUILD_CONFIG }}
      - name: Build (BlazorWasm)
        run: dotnet build ./samples/BlazorWasm/BlazorWasm.csproj -c ${{ env.DOTNET_BUILD_CONFIG }}
      # netcoreapp3.1
      - name: Run ManualGenerate (netcoreapp3.1)
        run: dotnet run --no-build --project ./samples/ManualGenerate/ManualGenerate.csproj -c ${{ env.DOTNET_BUILD_CONFIG }} -f netcoreapp3.1
      - name: Run SimpleGenerate (netcoreapp3.1)
        run: dotnet run --no-build --project ./samples/SimpleGenerate/SimpleGenerate.csproj -c ${{ env.DOTNET_BUILD_CONFIG }} -f netcoreapp3.1
      # net5.0
      - name: Run ManualGenerate (net5.0)
        run: dotnet run --no-build --project ./samples/ManualGenerate/ManualGenerate.csproj -c ${{ env.DOTNET_BUILD_CONFIG }} -f net5.0
      - name: Run SimpleGenerate (net5.0)
        run: dotnet run --no-build --project ./samples/SimpleGenerate/SimpleGenerate.csproj -c ${{ env.DOTNET_BUILD_CONFIG }} -f net5.0
      # net6.0
      - name: Run ManualGenerate (net6.0)
        run: dotnet run --no-build --project ./samples/ManualGenerate/ManualGenerate.csproj -c ${{ env.DOTNET_BUILD_CONFIG }} -f net6.0
      - name: Run SimpleGenerate (net6.0)
        run: dotnet run --no-build --project ./samples/SimpleGenerate/SimpleGenerate.csproj -c ${{ env.DOTNET_BUILD_CONFIG }} -f net6.0
      # docker
      - name: Linux Docker Compose Run
        run: docker-compose -f ./samples/LinuxRunSamples/compose.yaml up
